/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/empresa/cadastroEmpresa.ts":
/*!****************************************!*\
  !*** ./src/empresa/cadastroEmpresa.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CadastroEmpresa = void 0;\nconst empresa_1 = __importDefault(__webpack_require__(/*! ./empresa */ \"./src/empresa/empresa.ts\"));\nclass CadastroEmpresa {\n}\nexports.CadastroEmpresa = CadastroEmpresa;\ndocument.addEventListener('DOMContentLoaded', () => {\n    let nomeEmpresa = document.getElementById('nome');\n    let emailEmpresa = document.getElementById('email');\n    let cnpjEmpresa = document.getElementById('cnpj');\n    let cepEmpresa = document.getElementById('cep');\n    let estadoEmpresa = document.getElementById('estado');\n    let descricaoEmpresa = document.getElementById('descricao');\n    let linguagensSelecionadas = [];\n    function armazenarLinguagens() {\n        let checkboxes = document.getElementsByName('linguagem');\n        for (let i = 0; i < checkboxes.length; i++) {\n            if (checkboxes[i].type === 'checkbox' && checkboxes[i].checked) {\n                linguagensSelecionadas.push(checkboxes[i].value);\n            }\n        }\n        console.log(linguagensSelecionadas);\n        return false;\n    }\n    let botaoSalvaEmpresa = document.getElementById('button-adicionar');\n    // Evento\n    botaoSalvaEmpresa.addEventListener(\"click\", () => {\n        armazenarLinguagens();\n        let newEmpresa = new empresa_1.default();\n        const regexNome = /^[a-zA-Z \\.]+$/;\n        if (regexNome.test(nomeEmpresa.value.trim())) {\n            newEmpresa.nome = nomeEmpresa.value;\n        }\n        else {\n            alert('O campo nome só pode receber letras e pontos.');\n            return;\n        }\n        const regexEmail = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n        if (regexEmail.test(emailEmpresa.value)) {\n            newEmpresa.email = emailEmpresa.value;\n        }\n        else {\n            alert('O campo email deve conter um email válido.');\n            return;\n        }\n        const regexCNPJ = /^\\d{14}$/;\n        const cnpj = parseInt(cnpjEmpresa.value, 10);\n        if (regexCNPJ.test(cnpj.toString())) {\n            newEmpresa.cnpjEmpresa = cnpj;\n        }\n        else {\n            alert('O campo cnpj deve conter 14 números.');\n            return;\n        }\n        const regexCEP = /^\\d{8}$/;\n        const cep = parseInt(cepEmpresa.value, 10);\n        if (regexCEP.test(cep.toString())) {\n            newEmpresa.cep = cep;\n        }\n        else {\n            alert('O campo cep deve conter 8 números.');\n            return;\n        }\n        if (estadoEmpresa.value.trim() !== \"\" && descricaoEmpresa.value.trim() !== \"\") {\n            newEmpresa.estado = estadoEmpresa.value;\n            newEmpresa.descricao = descricaoEmpresa.value;\n        }\n        else {\n            alert('Por favor, preencha todos os campos antes de enviar o formulário!');\n            return;\n        }\n        newEmpresa.competencias = linguagensSelecionadas;\n        newEmpresa.vagas = [];\n        saveEmpresa(newEmpresa);\n        alert(\"Empresa cadastrada com sucesso.\");\n    });\n    // Função\n    function saveEmpresa(empresa) {\n        let empresas = [];\n        const empresasString = localStorage.getItem(\"empresas\");\n        if (empresasString) {\n            try {\n                empresas = JSON.parse(empresasString);\n            }\n            catch (error) {\n                console.error(`Não foi possível analisar o JSON armazenado em 'empresas': ${error}`);\n            }\n        }\n        empresas.push(empresa);\n        localStorage.setItem(\"empresas\", JSON.stringify(empresas));\n    }\n});\n\n\n//# sourceURL=webpack://frontend/./src/empresa/cadastroEmpresa.ts?");

/***/ }),

/***/ "./src/empresa/empresa.ts":
/*!********************************!*\
  !*** ./src/empresa/empresa.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst usuario_1 = __importDefault(__webpack_require__(/*! ../usuario */ \"./src/usuario.ts\"));\nclass Empresa extends usuario_1.default {\n    getCnpj() {\n        var _a;\n        const cpfString = (_a = this.cnpjEmpresa) === null || _a === void 0 ? void 0 : _a.toString();\n        const cpfFormatted = (cpfString === null || cpfString === void 0 ? void 0 : cpfString.substring(0, 2)) + '.' +\n            (cpfString === null || cpfString === void 0 ? void 0 : cpfString.substring(2, 5)) + '.' +\n            (cpfString === null || cpfString === void 0 ? void 0 : cpfString.substring(5, 8)) + '/' +\n            (cpfString === null || cpfString === void 0 ? void 0 : cpfString.substring(8, 12)) + '-' +\n            (cpfString === null || cpfString === void 0 ? void 0 : cpfString.substring(12, 14));\n        return cpfFormatted;\n    }\n}\nexports[\"default\"] = Empresa;\n\n\n//# sourceURL=webpack://frontend/./src/empresa/empresa.ts?");

/***/ }),

/***/ "./src/usuario.ts":
/*!************************!*\
  !*** ./src/usuario.ts ***!
  \************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass Usuarios {\n}\nexports[\"default\"] = Usuarios;\n\n\n//# sourceURL=webpack://frontend/./src/usuario.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/empresa/cadastroEmpresa.ts");
/******/ 	
/******/ })()
;